plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
	maven {
		name 'terraformersmc Maven'
		url "https://maven.terraformersmc.com"
	}
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"live-maid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

def liveChatClientBrotliVersion = "1.16.0"

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:3.3.2+1.20.4")
	modImplementation("com.terraformersmc:modmenu:9.0.0")
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	shadow implementation ('org.java-websocket:Java-WebSocket:1.5.2')
	shadow implementation ("tech.ordinaryroad:live-chat-client-bilibili:1.0.0")

	shadow implementation("com.aayushatharva.brotli4j:native-windows-x86_64:$liveChatClientBrotliVersion")
	shadow implementation("com.aayushatharva.brotli4j:native-linux-aarch64:$liveChatClientBrotliVersion")
	shadow implementation("com.aayushatharva.brotli4j:native-osx-aarch64:$liveChatClientBrotliVersion")
	shadow implementation("com.aayushatharva.brotli4j:native-osx-x86_64:$liveChatClientBrotliVersion")

	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modRuntimeOnly("com.terraformersmc:modmenu:${project.mod_menu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

shadowJar {
	configurations = [project.configurations.shadow]

	from(sourceSets.main.output)
	from(sourceSets.client.output)

	exclude("META-INF")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

remapJar {
	dependsOn(shadowJar)
	inputFile = tasks.shadowJar.archiveFile
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
}
